#!/usr/bin/env fish

[ -z "$argv" ]; and return 1

# env/settings
set cache_file $TMUX_HARPOON_CACHE_FILE
[ -z "$cache_file" ]; and set cache_file (echo -- ~/.cache/tmux-harpoon-sessions)

not [ -f $cache_file ]; and touch $cache_file

function main
    [ (count $argv) -gt 2 ]; and return 1

    begin
        switch "$argv"
            case --view
                view_bookmarks
            case --add
                add_bookmark
            case --edit
                edit_bookmarks
            case '--index *'
                goto_bookmark $argv[2]
            case '-*'
                tmux display -p "Unknown option $argv"
                return 1
        end
    end || true # suppress error pipe to tmux display (pretty annoying)
end


function add_bookmark
    echo (_get_session_info) >>$cache_file
    awk -i inplace '!seen[$0]++' $cache_file # de-duplicate
    tmux display -d 400 "Tracking session '#{session_name}'"
end

function edit_bookmarks
    tmux popup -h 40% -w 40% -E "$SHELL -c 'export TMUX_POPUP=1; $EDITOR $cache_file'"
end

function view_bookmarks
    set -fa fzf_cmd \
        # crazy, IK
        --header (set_color -i cyan)':: <'(set_color yellow)'ctrl-e'(set_color cyan)'> to '(set_color red)'Edit Bookmarks' \
        --bind ctrl-e:become:'tmux-harpoon --edit'

    set index 1
    begin
        for info in (cat $cache_file)
            string split = $info | read -L name path

            set is_in_use _is_attached $name $path
            set is_online _has_session $name $path
            if $is_in_use
                set -f indication (set_color -o yellow)
            else if $is_online
                set -f indication (set_color -o brgreen)
            end

            set reset (set_color normal)
            echo \
                (set_color -d white)"$index:"$reset \
                (set_color -o magenta)$name$reset \
                (set_color -id white)(string replace $HOME '~' $path)$reset \
                $indication

            set index (math $index + 1)
        end
    end \
        | $fzf_cmd \
        | awk '{ print $2,$3 }' \
        | read -t name path
    or return 1

    if [ -z "$name" -o -d "$(realpath $path)" ]
        sed -i "/^$name=$path/d" $cache_file
        tmux display -p "Removed invalid bookmark $name (path: $path)"
        return 1
    end

    _goto_bookmark $name $path
end

function goto_bookmark
    set index (math $argv)
    set bookmarks (cat $cache_file)
    set bookmark_info $bookmarks[$index]
    [ -z "$bookmarks[$index]" ]; and return 1
    string split = $bookmark_info | read -L name path
    _goto_bookmark $name $path
end


function _goto_bookmark
    set name $argv[1]
    set path (string unescape (eval echo -- $argv[2]))

    if not _has_session $name $path
        tmux new -ds $name -c $path
    end

    tmux switch-client -t $name
end

function _get_session_info
    tmux display -p '#{session_name}=#{session_path}'
end

function _has_session
    tmux ls -F '#{session_name}=#{session_path}' | grep -wq "^$argv[1]=$argv[2]"
    or return 1
end
function _is_attached
    tmux ls -F "#{session_name}=#{session_path}: #{?session_attached,attached,not attached}" | grep -wq "^$argv[1]=$argv[2]: attached"
    or return 1
end


main $argv
